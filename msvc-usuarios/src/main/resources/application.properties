spring.application.name=msvc-usuarios
server.port=${PORT:8001}

#url nueva para el docker local = host.docker.internal en vez de localhost
# 2 formas de conectarse por docker
# 1. usando host.docker.internal y poniendo el puerto externo
#spring.datasource.url=jdbc:mysql://host.docker.internal:33060/msvc_usuarios?serverTimezone=America/Santiago&allowPublicKeyRetrieval=false
# 2. usando el nombre del docker y el puerto interno (aplica tb para despliegues en kubernetes)
#spring.datasource.url=jdbc:mysql://${DB_HOST:mysql-db}:${DB_PORT:3306}/${DB_NAME:msvc_usuarios}?serverTimezone=America/Santiago&allowPublicKeyRetrieval=false
# url para localhost
#spring.datasource.url=jdbc:mysql://host.docker.internal:33060/msvc_usuarios
spring.datasource.url=jdbc:mysql://localhost:33060/msvc_usuarios?serverTimezone=America/Santiago&allowPublicKeyRetrieval=false

spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:sasa}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.generate-ddl=true
logging.level.org.hibernate.SQL=debug

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

logging.file.path = /app/logs

msvc.cursos.url=${CURSOS_URL:msvc-cursos}
msvc.cursos.port=${CURSOS_PORT:8002}